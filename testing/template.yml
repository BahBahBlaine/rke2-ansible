---
AWSTemplateFormatVersion: '2010-09-09'
Description: Template for testing rke2-ansible playbook

Parameters:
  SubnetA:
    Type: String
    Default: 'subnet-0523d8467cf8e5cec'
  InstanceSecurityGroup:
    Type: String
    Default: 'sg-09ad9431a6cb86a3a'
  EC2InstanceType:
    Type: String
    Default: t3.xlarge
  EC2AMI:
    Type: String
    Default: 'ami-84556de5'
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: 'rke2-ansible-ci'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

Resources:

  UBUNTU20Server01:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: !Ref EC2InstanceType
      SubnetId: !Ref SubnetA
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 32
            DeleteOnTermination: "true"
      Tags:
        - Key: "Name"
          Value: "rke2-ansible-automated-test-0"
        - Key: "Owner"
          Value: "rke2-ansible-github-actions"
        - Key: "NodeType"
          Value: "Server"

  UBUNTU20Server02:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: !Ref EC2InstanceType
      SubnetId: !Ref SubnetA
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 32
            DeleteOnTermination: "true"
      Tags:
        - Key: "Name"
          Value: "rke2-ansible-automated-test-0"
        - Key: "Owner"
          Value: "rke2-ansible-github-actions"
        - Key: "NodeType"
          Value: "Server"

  UBUNTU20Server03:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: !Ref EC2InstanceType
      SubnetId: !Ref SubnetA
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 32
            DeleteOnTermination: "true"
      Tags:
        - Key: "Name"
          Value: "rke2-ansible-automated-test-0"
        - Key: "Owner"
          Value: "rke2-ansible-github-actions"
        - Key: "NodeType"
          Value: "Server"

  UBUNTU20Agent04:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: !Ref EC2InstanceType
      SubnetId: !Ref SubnetA
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 32
            DeleteOnTermination: "true"
      Tags:
        - Key: "Name"
          Value: "rke2-ansible-automated-test-0"
        - Key: "Owner"
          Value: "rke2-ansible-github-actions"
        - Key: "NodeType"
          Value: "Agent"

  UBUNTU20Agent05:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: !Ref EC2InstanceType
      SubnetId: !Ref SubnetA
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 32
            DeleteOnTermination: "true"
      Tags:
        - Key: "Name"
          Value: "rke2-ansible-automated-test-0"
        - Key: "Owner"
          Value: "rke2-ansible-github-actions"
        - Key: "NodeType"
          Value: "Agent"

  UBUNTU20Agent06:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: !Ref EC2InstanceType
      SubnetId: !Ref SubnetA
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 32
            DeleteOnTermination: "true"
      Tags:
        - Key: "Name"
          Value: "rke2-ansible-automated-test-0"
        - Key: "Owner"
          Value: "rke2-ansible-github-actions"
        - Key: "NodeType"
          Value: "Agent"

  UBUNTU20Agent07:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: !Ref EC2InstanceType
      SubnetId: !Ref SubnetA
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 32
            DeleteOnTermination: "true"
      Tags:
        - Key: "Name"
          Value: "rke2-ansible-automated-test-0"
        - Key: "Owner"
          Value: "rke2-ansible-github-actions"
        - Key: "NodeType"
          Value: "Agent"

Outputs:
  UBUNTU20Server01PublicIP:
    Value:
      Fn::GetAtt:
        - UBUNTU20Server01
        - PublicIp
    Description: Ubuntu 20.04 PublicIp Address
  UBUNTU20Server02PublicIP:
    Value:
      Fn::GetAtt:
        - UBUNTU20Server02
        - PublicIp
    Description: Ubuntu 20.04 PublicIp Address
  UBUNTU20Server03PublicIP:
    Value:
      Fn::GetAtt:
        - UBUNTU20Server03
        - PublicIp
    Description: Ubuntu 20.04 PublicIp Address
  UBUNTU20Agent04PublicIP:
    Value:
      Fn::GetAtt:
        - UBUNTU20Agent04
        - PublicIp
    Description: Ubuntu 20.04 PublicIp Address
  UBUNTU20Agent05PublicIP:
    Value:
      Fn::GetAtt:
        - UBUNTU20Agent05
        - PublicIp
    Description: Ubuntu 20.04 PublicIp Address
  UBUNTU20Agent06PublicIP:
    Value:
      Fn::GetAtt:
        - UBUNTU20Agent06
        - PublicIp
    Description: Ubuntu 20.04 PublicIp Address
  UBUNTU20Agent07PublicIP:
    Value:
      Fn::GetAtt:
        - UBUNTU20Agent07
        - PublicIp
    Description: Ubuntu 20.04 PublicIp Address
